#!/bin/bash
. /home/$USER/.bashrc

# Settings
SOURCETREE="/home/harry/android/system"
declare -a DEVICES=( "angler" "deb" "falcon" "flo" "flounder" "flounder_lte" "huashan" "klte" "serranoltexx" )
SYNCONSTART=true
LOGFILEDIR="/home/harry/android/system/logs"
DELETEAFTERUPLOAD=true
export USER=$(whoami)
export USE_CCACHE=1

# What even is this
  echo "#################################################"
  echo "#################################################"
  echo "###                                           ###"
  echo "### The time is $(date '+%Y/%m/%d - %H:%M:%S')###"
  echo "### We are building for ${DEVICES[*]}"
  echo "### Off we go!                                ###"
  echo "###                                           ###"
  echo "#################################################"
  echo "#################################################"


# Get in the croot
  cd $SOURCETREE

# Quit script on ANY errors to stop problems before they take hold
  set -e

# Sync sources and ensure we're up to date
  if [ "$SYNCONSTART" = true ] ; then
    /home/harry/bin/repo sync -c
  fi

# Loop over all the devices in the array
  for DEVICE in "${DEVICES[@]}"; do

  # Define log file name
    MKALOGFILE=$LOGFILEDIR'/lineage-14.1-'$(date +%Y%m%d)'-UNOFFICIAL-'$DEVICE'-mka.txt'
    LOGFILE=$LOGFILEDIR'/lineage-14.1-'$(date +%Y%m%d)'-UNOFFICIAL-'$DEVICE'-main.txt'

    echo $(date '+%Y/%m/%d - %H:%M:%S')"  -  Beginning supper for "$DEVICE >> $LOGFILE

#    if [ $DEVICE = "angler" || $DEVICE = "flounder" || $DEVICE = "flounder_lte" || $DEVICE = "falcon"]; then
#      export WITH_DEXPREOPT="true"
#    else
#      export WITH_DEXPREOPT="false"
#    fi
  # Load in the brunch and breakfast commands
    echo $(date '+%Y/%m/%d - %H:%M:%S')"  -  Sourcing envsetup.sh" >> $LOGFILE
    source build/envsetup.sh >> $MKALOGFILE
    echo $(date '+%Y/%m/%d - %H:%M:%S')"  -  Making lunch makefiles for cm_"$DEVICE"-user" >> $LOGFILE
    lunch cm_$DEVICE-userdebug >> $MKALOGFILE
    echo $(date '+%Y/%m/%d - %H:%M:%S')"  -  Beginning make of otapackage" >> $LOGFILE
    mka otapackage >> $MKALOGFILE
    tail -n 2 $MKALOGFILE | head -n 1 >> $LOGFILE
  # Locate the latest made build ready to upload
  # Find spits out all zips in the out folder with date, sort sorts them in reverse to get latest at top and head chops off the top line
    BUILDZIP=$(find out/target/product/$DEVICE/ -maxdepth 1 -name 'cm_*.zip' -printf "%T+\t%p\n" | sort -r | cut -f 2- | head -n 1)
    echo $(date '+%Y/%m/%d - %H:%M:%S')"  -  Built locally as "$BUILDZIP >> $LOGFILE

  # Generate MD5
    md5sum $BUILDZIP >> $BUILDZIP.md5sum
    echo $(date '+%Y/%m/%d - %H:%M:%S')"  -  Here comes the MD5SUM: " >> $LOGFILE
    md5sum $BUILDZIP >> $LOGFILE

  # Generate a new name
    NEWNAME='lineage-14.1-'$(date +%Y%m%d)'-UNOFFICIAL-'$DEVICE'.zip'
    echo $(date '+%Y/%m/%d - %H:%M:%S')"  -  New name is to be "$NEWNAME >> $LOGFILE

  # Upload the zip and its md5sum to the server
    echo $(date '+%Y/%m/%d - %H:%M:%S')"  -  Uploading the build" >> $LOGFILE
    scp $BUILDZIP root@harryyoud.co.uk:/home/harryyoud/public_html/lineageos/downloads/$NEWNAME >> $LOGFILE
    echo $(date '+%Y/%m/%d - %H:%M:%S')"  -  Uploading the MD5SUM" >> $LOGFILE
    scp $BUILDZIP.md5sum root@harryyoud.co.uk:/home/harryyoud/public_html/lineageos/downloads/$DEVICE/$NEWNAME.md5sum >> $LOGFILE
    echo $(date '+%Y/%m/%d - %H:%M:%S')"  -  Moving the build into the correct directory" >> $LOGFILE
    ssh root@harryyoud.co.uk mv /home/harryyoud/public_html/lineageos/downloads/$NEWNAME /home/harryyoud/public_html/lineageos/downloads/$DEVICE/ >> $LOGFILE

  # Delete the build zip because we like having disk space
    if [ $DELETEAFTERUPLOAD = true ] ; then
      echo $(date '+%Y/%m/%d - %H:%M:%S')"  -  Deleting build zips and MD5SUM" >> $LOGFILE
      rm -v $BUILDZIP >> $LOGFILE
      rm -v $BUILDZIP.md5sum >> $LOGFILE
    fi

    echo $(date '+%Y/%m/%d - %H:%M:%S')"  -  All done!" >> $LOGFILE

  done

# Tell the user everything is fine
  cowsay -f tux "Yay!"
  echo "Everything looks to have worked. God knows how..."

